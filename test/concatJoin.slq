// args: --run

def concat[n:!ℕ,m:!ℕ,τ:*](x: τ^n, y: τ^m)mfree: τ^(n+m){
	return x~y;
}

def foo[n:!ℕ](const b: 𝔹, x: int[32]^n, y: int[32]^2): int[32]^(n+2){
	return if b then concat(x,y) else concat(y,x);
}

def main(){
	b:=H(0:𝔹);
	x:=foo(b, (2,3,4): int[32]^3, (3,2):int[32]^2);
	if measure(b) {
		assert(measure(x)==(2,3,4,3,2))
	}else{
		assert(measure(x)==(3,2,2,3,4));
	}
}
